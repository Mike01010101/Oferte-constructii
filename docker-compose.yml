version: '3.8'

services:
# Serviciul PHP
  app-service:
    image: calcul-deviz-app:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_URL=${APP_URL}
    container_name: calcul_deviz_app
    restart: unless-stopped
    command: sh -c "/usr/local/bin/wait-for-it.sh mariadb-service:3306 --timeout=30 --strict -- php-fpm"
    volumes:
      # Mapăm fișierul .env
      - ./.env:/var/www/.env
      # Montăm un singur volum partajat pentru tot codul, inclusiv folderul storage.
      - app-code:/var/www
    networks:
      - calcul-deviz-network
    depends_on:
      - mariadb-service

  # Serviciul Nginx
  nginx-service:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: calcul_deviz_nginx
    restart: unless-stopped
    ports:
      - "8088:80"
    volumes:
      # NOU: Nginx vede ACELAȘI volum cu codul aplicației ca și serviciul PHP
      # Acum, când PHP creează symlink-ul 'public/storage', Nginx îl va putea vedea și folosi corect.
      - app-code:/var/www
    networks:
      - calcul-deviz-network
    depends_on:
      - app-service

  # Serviciul MariaDB
  mariadb-service:
    image: mariadb:latest
    container_name: calcul_deviz_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-RootParolaSigura123}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - calcul-deviz-network

networks:
  calcul-deviz-network:
    driver: bridge

volumes:
  db-data:
    driver: local
  # Definim un singur volum pentru codul aplicației.
  app-code:
    driver: local